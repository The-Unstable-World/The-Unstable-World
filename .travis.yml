language: cpp
jobs:
  include:
    - name: "Mods"
      os: linux
      dist: xenial
      script:
        - . ./lib.sh
        - mkdir -p /tmp/WORKSPACE/work
        - pushd /tmp/WORKSPACE/work
        - job_mods
        - mkdir -p /tmp/WORKSPACE/DEPLOY/mods
        - cp -v * /tmp/WORKSPACE/DEPLOY/mods
        - popd
    - name: "MacOSX Client"
      os: osx
      osx_image: xcode8.3
      install:
        - brew update
        - . ./lib.sh
        - install_minetest_osx_builddeps
      script:
        - mkdir -p /tmp/WORKSPACE
        - pushd /tmp/WORKSPACE
        - get_minetest
        - build_minetest_client_osx
        - mkdir -p /tmp/WORKSPACE/DEPLOY/client/macosx
        - cp -rv ./minetest/*.zip /tmp/WORKSPACE/DEPLOY/client/macosx/minetest.zip
        - popd
    - name: "GNU/Linux AMD64 Client"
      os: linux
      dist: xenial
      install:
        - . ./lib.sh
        - sudo apt-get update && sudo apt-get remove -y mysql-server-5.7 $(COMMENT "travis ci bug") && sudo apt-get dist-upgrade -y # because some libraries will be copied to AppImage
        - install_minetest_debian_builddeps
      script:
        - mkdir -p /tmp/WORKSPACE
        - pushd /tmp/WORKSPACE
        - get_minetest
        - build_minetest_client_gnulinux_amd64
        - mkdir -p /tmp/WORKSPACE/DEPLOY/client/gnulinux/amd64
        - cp ./minetest/minetest.AppImage /tmp/WORKSPACE/DEPLOY/client/gnulinux/amd64
        - popd
    - name: "GNU/Linux AMD64 Server"
      os: linux
      dist: xenial
      install:
        - . ./lib.sh
        - sudo apt-get update && sudo apt-get remove -y mysql-server-5.7 $(COMMENT "travis ci bug") && sudo apt-get dist-upgrade -y # because some libraries will be copied to AppImage
        - install_minetest_debian_builddeps
      script:
        - mkdir -p /tmp/WORKSPACE
        - pushd /tmp/WORKSPACE
        - get_minetest
        - build_minetest_server_gnulinux_amd64
        - mkdir -p /tmp/WORKSPACE/DEPLOY/server/gnulinux/amd64
        - cp ./minetest/minetestserver.AppImage /tmp/WORKSPACE/DEPLOY/server/gnulinux/amd64
        - popd
    - name: "Windows AMD64 Client"
      os: linux
      dist: xenial
      install:
        - sudo apt-get update
        - . ./lib.sh
      script:
        - mkdir -p /tmp/WORKSPACE
        - pushd /tmp/WORKSPACE
        - CONFIG_WIN_ARCH=x86_64
        - install_minetest_mingw_builddeps__and__build__ubuntu1604
        - mkdir -p /tmp/WORKSPACE/DEPLOY/client/windows/amd64
        - cp ./minetest/minetest.zip /tmp/WORKSPACE/DEPLOY/client/windows/amd64
        - popd
    - name: "Windows i686 Client"
      os: linux
      dist: xenial
      install:
        - sudo apt-get update
        - . ./lib.sh
      script:
        - mkdir -p /tmp/WORKSPACE
        - pushd /tmp/WORKSPACE
        - CONFIG_WIN_ARCH=i686
        - install_minetest_mingw_builddeps__and__build__ubuntu1604
        - mkdir -p /tmp/WORKSPACE/DEPLOY/client/windows/i686
        - cp ./minetest/minetest.zip /tmp/WORKSPACE/DEPLOY/client/windows/i686
        - popd
    - name: "Android Client"
      os: linux
      dist: xenial
      install:
        - wget --quiet -O ~/sdk-tools-linux.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
        - unzip -q ~/sdk-tools-linux.zip -d ~/android-sdk-linux
        - rm ~/sdk-tools-linux.zip
        - export ANDROID_HOME="$HOME/android-sdk-linux"
        - export PATH="$PATH:$ANDROID_HOME/tools/bin"
        - ndk_version=r16b
        - wget --quiet -O "$HOME/android-ndk-${ndk_version}.zip" "https://dl.google.com/android/repository/android-ndk-${ndk_version}-linux-x86_64.zip"
        - unzip -q "$HOME/android-ndk-${ndk_version}.zip" -d ~
        - rm "$HOME/android-ndk-${ndk_version}.zip"
        - export ANDROID_NDK_HOME="$HOME/android-ndk-${ndk_version}"
        - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        - echo y | sdkmanager "build-tools;29.0.2" >/dev/null
        - export PATH="$PATH:$ANDROID_HOME/build-tools/29.0.2"
        - echo y | sdkmanager "platforms;android-29" >/dev/null
      script:
        - . ./lib.sh
        - mkdir -p /tmp/WORKSPACE
        - pushd /tmp/WORKSPACE
        - get_minetest
        - rm -fr ./minetest/games/minetest_game/.git
        - echo "ndk.dir = $ANDROID_NDK_HOME" > ./minetest/build/android/local.properties
        - echo "sdk.dir = $ANDROID_HOME" >> ./minetest/build/android/local.properties
        - pushd ./minetest/build/android
        - make release -j4 2>&1 | cat
        - mkdir -p /tmp/WORKSPACE/DEPLOY/client/android
        - zipalign -p 4 ./build/outputs/apk/release/Minetest-release-unsigned.apk /tmp/WORKSPACE/DEPLOY/client/android/minetest.apk
        - yes | keytool -genkey -v -keystore key.keystore -keyalg RSA -keysize 2048 -validity 327680 -alias key -storepass storepass
        - apksigner sign --ks key.keystore --ks-key-alias key --ks-pass pass:storepass /tmp/WORKSPACE/DEPLOY/client/android/minetest.apk
        - popd
        - popd

after_success:
  - |
    if [ -n "${GITHUB_OAUTH_TOKEN}" ] && [ -d /tmp/WORKSPACE/DEPLOY ] ;then
      git config --global user.email tsao-chi@the-lingo.org
      git config --global user.name 'ㄗㄠˋ ㄑㄧˊ'
      git clone --depth 1 https://${GITHUB_OAUTH_TOKEN}@github.com/The-Unstable-World/binary.git /tmp/WORKSPACE/deploy_repo
      cd /tmp/WORKSPACE/deploy_repo
      cp -rv /tmp/WORKSPACE/DEPLOY/* ./
      git add .
      git commit -m 'deploy' || true
      git push --force
    fi
