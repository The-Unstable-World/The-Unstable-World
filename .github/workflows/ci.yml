name: CI
on:
  push:
    branches:
      - master
  schedule:
    - cron:  '0 */1 * * *'

jobs:
  mods:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: |
        . ./lib.sh
        mkdir -p /tmp/WORKSPACE/DEPLOY/mods &&
        pushd /tmp/WORKSPACE/DEPLOY/mods &&
        job_mods &&
        popd
    - name: Publish
      env:
        GIT_ID_RSA_PUB: ${{ secrets.GIT_ID_RSA_PUB }}
        GIT_ID_RSA: ${{ secrets.GIT_ID_RSA }}
        GIT_REPO: git@github.com:The-Unstable-World/binary.git
        GIT_SITE: github.com
      run: |
        . ./lib.sh
        do_publish(){
          (
          mkdir -p ~/.ssh &&
          echo "$GIT_ID_RSA_PUB" > ~/.ssh/id_rsa.pub &&
          echo "$GIT_ID_RSA" > ~/.ssh/id_rsa &&
          ssh-keyscan -H -t rsa "$GIT_SITE" > ~/.ssh/known_hosts &&
          chmod 600 ~/.ssh/* &&
          rm -fr /tmp/WORKSPACE/deploy_repo &&
          git clone --depth 1 "$GIT_REPO" /tmp/WORKSPACE/deploy_repo &&
          git config --global user.email tsao-chi@the-lingo.org &&
          git config --global user.name 'ㄗㄠˋ ㄑㄧˊ' &&
          cd /tmp/WORKSPACE/deploy_repo &&
          cp -rv /tmp/WORKSPACE/DEPLOY/* ./ &&
          git add . &&
          git commit --allow-empty -m "[github actions]deploy $(date -Iseconds)" &&
          git push
          )
        }
        if [ -n "$GIT_ID_RSA" ] && [ -d /tmp/WORKSPACE/DEPLOY ] ;then
          RETRY do_publish
        fi
  games:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: |
        . ./lib.sh
        mkdir -p /tmp/WORKSPACE/DEPLOY/games &&
        pushd /tmp/WORKSPACE/DEPLOY/games &&
        job_capturetheflag &&
        popd
    - name: Publish
      env:
        GIT_ID_RSA_PUB: ${{ secrets.GIT_ID_RSA_PUB }}
        GIT_ID_RSA: ${{ secrets.GIT_ID_RSA }}
        GIT_REPO: git@github.com:The-Unstable-World/binary.git
        GIT_SITE: github.com
      run: |
        . ./lib.sh
        do_publish(){
          (
          mkdir -p ~/.ssh &&
          echo "$GIT_ID_RSA_PUB" > ~/.ssh/id_rsa.pub &&
          echo "$GIT_ID_RSA" > ~/.ssh/id_rsa &&
          ssh-keyscan -H -t rsa "$GIT_SITE" > ~/.ssh/known_hosts &&
          chmod 600 ~/.ssh/* &&
          rm -fr /tmp/WORKSPACE/deploy_repo &&
          git clone --depth 1 "$GIT_REPO" /tmp/WORKSPACE/deploy_repo &&
          git config --global user.email tsao-chi@the-lingo.org &&
          git config --global user.name 'ㄗㄠˋ ㄑㄧˊ' &&
          cd /tmp/WORKSPACE/deploy_repo &&
          cp -rv /tmp/WORKSPACE/DEPLOY/* ./ &&
          git add . &&
          git commit --allow-empty -m "[github actions]deploy $(date -Iseconds)" &&
          git push
          )
        }
        if [ -n "$GIT_ID_RSA" ] && [ -d /tmp/WORKSPACE/DEPLOY ] ;then
          RETRY do_publish
        fi
  amd64-alpine-server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: |
        mkdir -p /tmp/WORKSPACE &&
        docker run -i --rm --workdir "$PWD" -v "$PWD:$PWD" -v "/tmp/WORKSPACE:/tmp/WORKSPACE" centos:7 bash << 'EOF'
          export APPIMAGE_EXTRACT_AND_RUN=1
          . ./lib.sh
          CONFIG_APPIMAGE_TOOLS_ARCH=x86_64
          RETRY yum update -y &&
          install_minetest_centos7_builddeps_nosudo &&
          cd /tmp/WORKSPACE &&
          get_minetest &&
          build_minetest_server_gnulinux &&
          get_appimage_and_linuxdeploy &&
          bundle_minetest_server_gnulinux_appimage &&
          mkdir -p /tmp/WORKSPACE/DEPLOY/server/gnulinux/amd64 &&
          cp ./minetest/minetestserver.AppImage /tmp/WORKSPACE/DEPLOY/server/gnulinux/amd64
        EOF
    - name: Publish
      env:
        GIT_ID_RSA_PUB: ${{ secrets.GIT_ID_RSA_PUB }}
        GIT_ID_RSA: ${{ secrets.GIT_ID_RSA }}
        GIT_REPO: git@github.com:The-Unstable-World/binary.git
        GIT_SITE: github.com
      run: |
        . ./lib.sh
        do_publish(){
          (
          mkdir -p ~/.ssh &&
          echo "$GIT_ID_RSA_PUB" > ~/.ssh/id_rsa.pub &&
          echo "$GIT_ID_RSA" > ~/.ssh/id_rsa &&
          ssh-keyscan -H -t rsa "$GIT_SITE" > ~/.ssh/known_hosts &&
          chmod 600 ~/.ssh/* &&
          rm -fr /tmp/WORKSPACE/deploy_repo &&
          git clone --depth 1 "$GIT_REPO" /tmp/WORKSPACE/deploy_repo &&
          git config --global user.email tsao-chi@the-lingo.org &&
          git config --global user.name 'ㄗㄠˋ ㄑㄧˊ' &&
          cd /tmp/WORKSPACE/deploy_repo &&
          cp -rv /tmp/WORKSPACE/DEPLOY/* ./ &&
          git add . &&
          git commit --allow-empty -m "[github actions]deploy $(date -Iseconds)" &&
          git push
          )
        }
        if [ -n "$GIT_ID_RSA" ] && [ -d /tmp/WORKSPACE/DEPLOY ] ;then
          RETRY do_publish
        fi
